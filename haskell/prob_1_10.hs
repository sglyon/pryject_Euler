-------------- Problem 1

{-If we list all the natural numbers below 10 that are multiples of 3 or 5, we
get 3, 5, 6 and 9. The sum of these multiples is 23. Find the sum of all the
multiples of 3 or 5 below 1000-}

prob1 :: Int
prob1 = sum [x  | x <- [1..999], x `mod` 3 == 0 || x `mod` 5 == 0]


-------------- Problem 2

{-Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.-}

fibs :: [Integer]
fibs = 1 : 2 : zipWith (+) fibs (tail fibs)

prob2 :: Integer
prob2 = sum [x | x <- takeWhile (<= 4000000) fibs, even x]


-------------- Problem 3

{-The prime factors of 13195 are 5, 7, 13 and 29.
What is the largest prime factor of the number 600851475143 ?-}

factorsOf:: Int -> [Int]
factorsOf n = filter (\i -> n `mod` i == 0) [1..(ceiling (sqrt (fromIntegral n)))] ++ [n]

isPrime :: Int -> Bool
isPrime n = length (factorsOf n) == 2

prob3 :: Int
prob3 = last . filter isPrime $ factorsOf 600851475143


-------------- Problem 4

{-A palindromic number reads the same both ways. The largest palindrome made
from the product of two 2-digit numbers is 9009 = 91 99. Find the largest
palindrome made from the product of two 3-digit numbers.-}

isPalindrome :: Int -> Bool
isPalindrome n = (show n) == reverse (show n)

prob4 :: Int
prob4 = maximum [x*y | x<-[100..999], y<-[x..999], isPalindrome $ x*y]


-------------- Problem 5

{-2520 is the smallest number that can be divided by each of the numbers from 1
to 10 without any remainder. What is the smallest positive number that is
evenly divisible by all of the numbers from 1 to 20?-}

prob5 :: Int
prob5 = foldl1 lcm [1..20]


-------------- Problem 6

{-The sum of the squares of the first ten natural numbers is, 12 + 22 + ... +
102 = 385 The square of the sum of the first ten natural numbers is, (1 + 2 +
... + 10)2 = 552 = 3025 Hence the difference between the sum of the squares of
the first ten natural numbers and the square of the sum is 3025 385 = 2640.
Find the difference between the sum of the squares of the first one hundred
natural numbers and the square of the sum.-}

prob6 :: Int
prob6 = (sum [1..100] ^2) - sum (map (^2) [1..100])


-------------- Problem 7

{-By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see
that the 6th prime is 13. What is the 10 001st prime number?-}

primes :: [Int]
primes = [x | x <-[2..], isPrime x]

prob7 :: Int
prob7 = primes !! 9999


-------------- Problem 8

bigNum :: String
bigNum = "73167176531330624919225119674426574742355349194934" ++
          "96983520312774506326239578318016984801869478851843" ++
          "85861560789112949495459501737958331952853208805511" ++
          "12540698747158523863050715693290963295227443043557" ++
          "66896648950445244523161731856403098711121722383113" ++
          "62229893423380308135336276614282806444486645238749" ++
          "30358907296290491560440772390713810515859307960866" ++
          "70172427121883998797908792274921901699720888093776" ++
          "65727333001053367881220235421809751254540594752243" ++
          "52584907711670556013604839586446706324415722155397" ++
          "53697817977846174064955149290862569321978468622482" ++
          "83972241375657056057490261407972968652414535100474" ++
          "82166370484403199890008895243450658541227588666881" ++
          "16427171479924442928230863465674813919123162824586" ++
          "17866458359124566529476545682848912883142607690042" ++
          "24219022671055626321111109370544217506941658960408" ++
          "07198403850962455444362981230987879927244284909188" ++
          "84580156166097919133875499200524063689912560717606" ++
          "05886116467109405077541002256983155200055935729725" ++
          "71636269561882670428252483600823257530420752963450"


main :: IO ()
main  = do
    putStrLn $ "Problem 1: " ++ show prob1
    putStrLn $ "Problem 2: " ++ show prob2
    putStrLn $ "Problem 3: " ++ show prob3
    putStrLn $ "Problem 4: " ++ show prob4
    putStrLn $ "Problem 5: " ++ show prob5
    putStrLn $ "Problem 6: " ++ show prob6
    putStrLn $ "Problem 7: " ++ show prob7

